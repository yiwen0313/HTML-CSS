.box1{
    .box2{
        color: aquamarine;    
    } 

    >.box3{
        color: red;

        &:hover{
            color: blue;
        }
    }

    //为box1设置一个hover
    // &表示外层的父元素
    &:hover{
        color: bisque;
    }

    div &{
        width: 100px;
    }
}

.p1{
    width: 100px;
    height: 200px;
}

// :extend() 对当前选择器扩展指定选择器的样式（选择器分组）
.p2:extend(.box1){
    color: red;
}

.p3{
    //直接对指定的样式进行引用，这里相当于将p1的样式在这里进行赋值
    // minxin   混合
    .p1();
}

// 使用类选择器时，可以在选择器后边添加一个括号，这时实际上就创建了一个mixins 
.p4(){
    width: 100px;
    height: 100px;
    background-color: #bfa;
}

.p5{
    .p4;
}

// 混合函数 在混合函数中可以直接设置变量
.test(@w, @h, @bg-color){
    width: @w;
    height: @h;
    border: 1px solid @bg-color;
}

div{
    // 调用混合函数，按顺序传递参数
    // .test(200px, 300px, #bfa);
    // 也可指定
    .test(@bg-color:#bfa, @h:200px, @w:300px);
}

span{
    font-size: average(red, blue);
}

html{
    width: 100%;
    height: 100%;
}

body{
    width: 100%;
    height: 100%;
    background-color: #bfa;
}

body:hover{
    background-color: darken(#bfa, 30%);
}